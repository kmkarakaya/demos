Create virtual env
python -m venv "demoenv"
.\demoenv\Scripts\activate demoenv

pip install --upgrade pip

"requirements.txt" file content:
pandas
fastapi
joblib
uvicorn
jinja2
scikit_learn
tensorflow


pip install -r .\requirements.txt

Heroku files:
1. "Procfile" file content: P is capital!!!
web: uvicorn myServer:app --host=0.0.0.0 --port=${PORT:-5000}

2. "runtime.txt" file content:
python-3.10.0

Local Run
uvicorn myServer:app --reload


Git Operations:
1. ".gitignore" file content:
__pycache__
heroku

2. git init
3. git add .

4. list all tracked files
git ls-files -s

5. list all staged files
git diff --name-only --cached

6. commit
git commit -m "First"

7. set branch
git branch -M main

8. New repo:
git remote add origin https://github.com/kmkarakaya/demos.git

9. push
git push -u origin main

10 create branch nd switch in this branch
git checkout -b xyz

11 Push the branch on github :
git push origin xyz

12 see all the branches
git branch -a

13 Add a new remote for your branch :
git remote add [name_of_your_remote] [name_of_your_new_branch]
git remote add main xyz

14 commit
git add .
git commit -m "branch first commit"

15 Push changes from your commit into your branch
git push --set-upstream origin reviewClass
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 463 bytes | 463.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
remote: 
remote: Create a pull request for 'reviewClass' on GitHub by visiting:
remote:      https://github.com/kmkarakaya/demos/pull/new/reviewClass
remote:
To https://github.com/kmkarakaya/demos.git
 * [new branch]      reviewClass -> reviewClass
Branch 'reviewClass' set up to track remote branch 'reviewClass' from 'origin'.


